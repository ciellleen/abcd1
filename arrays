파이썬 배열

참고: 파이썬에는 배열에 대한 내장 지원이 없지만, 대신 파이썬 리스트를 사용할 수 있습니다.

배열
참고: 이 페이지에서는 배열로서의 리스트 사용 방법을 보여줍니다. 그러나 파이썬에서 배열을 다루려면 NumPy 라이브러리와 같은 라이브러리를 가져와야 합니다.

배열은 하나의 변수에 여러 값을 저장하는 데 사용됩니다.

예시
자동차 이름을 포함하는 배열 생성:

```python
cars = ["Ford", "Volvo", "BMW"]
```

배열이란?
배열은 여러 값을 동시에 보유할 수 있는 특별한 변수입니다.

항목 목록(예: 자동차 이름 목록)이 있다면, 자동차를 단일 변수에 저장하면 다음과 같습니다.

```python
car1 = "Ford"
car2 = "Volvo"
car3 = "BMW"
```

그러나 자동차를 반복하고 특정 자동차를 찾으려면 어떻게 해야 할까요? 그리고 3개가 아니라 300개의 자동차가 있다면 어떨까요?

해결책은 배열입니다!

배열은 단일 이름으로 많은 값을 보유할 수 있으며, 색인 번호를 참조하여 값을 액세스할 수 있습니다.

배열 요소에 액세스하기
색인 번호를 참조하여 배열 요소에 액세스합니다.

예시
첫 번째 배열 항목의 값을 가져옵니다:

```python
x = cars[0]
```

예시
첫 번째 배열 항목의 값을 수정합니다:

```python
cars[0] = "Toyota"
```

배열의 길이
len() 메서드를 사용하여 배열의 길이(배열의 요소 수)를 반환합니다.

예시
cars 배열의 요소 수를 반환합니다:

```python
x = len(cars)
```

참고: 배열의 길이는 항상 가장 높은 배열 색인보다 하나 더 많습니다.

배열 요소 반복
for in 루프를 사용하여 배열의 모든 요소를 반복할 수 있습니다.

예시
cars 배열의 각 항목을 인쇄합니다:

```python
for x in cars:
  print(x)
```

배열 요소 추가
append() 메서드를 사용하여 배열에 요소를 추가할 수 있습니다.

예시
cars 배열에 하나의 요소를 더 추가합니다:

```python
cars.append("Honda")
```

배열 요소 제거
pop() 메서드를 사용하여 배열에서 요소를 제거할 수 있습니다.

예시
cars 배열의 두 번째 요소를 삭제합니다:

```python
cars.pop(1)
```

remove() 메서드를 사용하여 배열에서 요소를 제거할 수도 있습니다.

예시
값이 "Volvo"인 요소를 삭제합니다:

```python
cars.remove("Volvo")
```

참고: 목록의 remove() 메서드는 지정된 값의 첫 번째 발생만 제거합니다.

배열 메서드
파이썬에는 리스트/배열에서 사용할 수 있는 일련의 내장 메서드가 있습니다.

메서드	설명
append()	리스트 끝에 요소를 추가합니다.
clear()	리스트에서 모든 요소를 제거합니다.
copy()	리스트의 복사본을 반환합니다.
count()	지정된 값과 일치하는 요소의 수를 반환합니다.
extend()	리스트(또는 반복 가능한 모든 항목)의 요소를 현재 리스트의 끝에 추가합니다.
index()	지정된 값과 일치하는 첫 번째 요소의 인덱스를 반환합니다.
insert()	지정된 위치에 요소를 추가합니다.
pop()	지정된 위치의 요소를 제거합니다.
remove()	지정된 값과 일치하는 첫 번째 항목을 제거합니다.
reverse()	리스트의 순서를 뒤집습니다.
sort()	리스트를 정렬합니다.
참고: 파이썬에는 배열에 대한 내장 지원이 없지만, 파이썬 리스트를 대신 사용할 수 있습니다.
